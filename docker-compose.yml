version: "3"
services:
  nginx:
    image: nginx:latest
    networks:
      - interna
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
    ports:
      - "9999:80"
      - "443:443"
    volumes:
      - .:/var/www/salao
      - ./docker/nginx/site:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/usr/local/nginx/ssl
    depends_on:
      - php-fpm

  php-fpm:
    #build: .
    image: salao_php-fpm:latest
    working_dir: /var/www/salao
    networks:
      - interna
    deploy:
      replicas: 3
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
    environment:
        - DEBUG=1
        - DB_HOST=mysql
        - DB_PORT=3306
        - DB_USER=root
        - DB_PASS=root
        - DB_NAME=agenda
    volumes:
      - .:/var/www/salao
    depends_on:
      - redis
      - mysql

  mysql:
    image: mysql:latest
    networks:
      - interna
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
    environment:
     - MYSQL_ROOT_PASSWORD=root
     - MYSQL_DATABASE=agenda
    ports:
      - "3306:3306"

  redis:
    image: redis:alpine
    ports:
      - "6379"
    networks:
      - interna
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
  portainer:
    image: portainer/portainer
    networks:
      - interna
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9000:9000"
    deploy:
      placement:
        constraints: [node.role == manager]
      replicas: 1
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
networks:
  interna: